type Mutation {
    makeActions(gameId: String!, actions: [Action]): String! @auth
}

type Query {
    board(gameId: String!): Board @auth
}

type Subscription {
    boardUpdates(gameId: String!): Board
}

input Action {
    code:String
    args:String
}

type BoardUpdate {
    gameId:String,
    board:Board
}

type Board {
    turn:String,
    pieces:[Piece],
    nodes:[Node],
    roles:[Role]
    connections:[Connection]
}

type Piece {
    label:String
    location:String
}

type Node {
    label:String,
    x:Int,
    y:Int
}

type Role {
    role:String,
    user:User
}

type Connection {
    nodes:[String]
}